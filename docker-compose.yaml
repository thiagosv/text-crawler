version: "3.8"
services:
  backend:
    build: backend/
    entrypoint: dockerize -template ./.docker/.env:.env -wait tcp://rabbitmq:5672 -wait tcp://mongo:27017 -timeout 40s pm2-runtime src/app.js
    ports:
      - "3333:3333"
    environment:
      - MONGO_HOST=mongo:27017
      - MONGO_DATABASE=novel
      - RABBITMQ_URL=admin:admin@rabbitmq:5672
      - EXCHANGE=pdf.generate
    networks:
      - novel_pdf
    depends_on:
      - mongo
      - rabbitmq
  worker:
    build: worker/
    # entrypoint: dockerize -template ./.docker/.env:.env -wait tcp://rabbitmq:5672 -timeout 40s yarn dev
    entrypoint: dockerize -template ./.docker/.env:.env -wait tcp://rabbitmq:5672 -timeout 40s pm2-runtime src/app.js
    environment:
      - RABBITMQ_URL=admin:admin@rabbitmq:5672
      - QUEUE=pdf.generate
    volumes:
      # - ./worker:/home/api/
      - ./pdf:/home/api/pdf
      - ./pdf:/home/api/src/pdf
    networks:
      - novel_pdf
    depends_on:
      - rabbitmq
  rabbitmq:
    build: rabbitmq/
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - novel_pdf
  mongo:
    image: mongo
    restart: always
    networks:
      - novel_pdf
    volumes:
      - ./.docker/mongo-data:/data/db
  mongo-express:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
    restart: always
    ports:
      - "8081:8081"
    networks:
      - novel_pdf
    depends_on:
      - mongo
networks:
  novel_pdf:
    driver: bridge
